
¿Quién propuso el modelo relacional y en qué año?  
Dr. Edgar (Ted) Codd, en 1970.  

¿Cuál es el elemento estructural fundamental del modelo relacional?  
La tabla: todo se guarda en tablas.  

¿Qué características deben tener los campos (columnas) en una tabla relacional?  
Nombres únicos, tipo de dato único, datos atómicos, permiten valores nulos, y claves definidas.  

¿Qué significa que los datos sean atómicos en una tabla?  
Que cada entrada es indivisible; no se permiten listas ni estructuras.  

¿Qué operadores fundamentales definió Codd para manipular datos?  
SELECT, PROJECT, JOIN.  

¿Qué hace el operador SELECT en álgebra relacional?  
Extrae filas que cumplen ciertos criterios y genera una nueva tabla.  

¿Qué hace el operador PROJECT?  
Extrae columnas específicas y genera una nueva tabla.  

¿Qué hace el operador JOIN?  
Une dos tablas en una nueva, combinando registros relacionados.  

¿Qué es la integridad de entidad?  
Garantiza que los campos clave tengan valores no nulos y que los registros sean localizables.  

¿Qué es la integridad referencial y qué condiciones debe cumplir?  
Impide borrar registros referenciados por otras tablas; las claves deben ser del mismo tipo.  

¿Qué significa SQL y de dónde proviene su nombre?  
Structured Query Language, derivado de Sequel (IBM, 1974).  

¿SQL forma parte del modelo relacional?  
No, pero se usa para implementarlo.  

¿Qué otros lenguajes de consulta pueden aplicarse al modelo relacional?  
Query-By-Example (QBE) y otros lenguajes.  

¿Qué tipo de lenguaje es SQL según Codd?  
Lenguaje completo: definición (DDL) y manipulación (DML).  

¿Qué significa que SQL tenga una estructura "pseudo inglesa"?  
Su sintaxis se asemeja al inglés, facilitando su lectura.  

¿Para qué se utiliza el lenguaje DDL?  
Para definir estructuras como tablas, vistas e índices.  

Menciona cinco comandos del DDL y su función.  
CREATE (crear), ALTER (modificar), DROP (eliminar), TRUNCATE (vaciar tabla), COMMENT (agregar comentarios), RENAME (renombrar).  

¿Qué operaciones permite realizar el DML?  
Consultar, insertar, actualizar y eliminar datos.  

Menciona los comandos principales del DML.  
SELECT, INSERT, UPDATE, DELETE.  

¿Qué operaciones permite realizar el DCL?  
Controlar accesos y privilegios de usuarios.  

¿Qué comandos se utilizan para otorgar y revocar privilegios?  
GRANT (otorgar), REVOKE (revocar).  

Menciona tres tipos de datos numéricos en SQL.  
INTEGER, NUMERIC(n,m), FLOAT.  

¿Qué tipo de dato se usa para almacenar archivos binarios?  
BLOB.  

¿Qué tipo de dato se usa para valores lógicos?  
BIT.  

Menciona tres operadores aritméticos y su función.  
+ (suma), - (resta), * (producto).  

Menciona tres operadores relacionales y su función.  
< (menor que), > (mayor que), <> o != (distinto).  

¿Qué operadores lógicos existen en SQL?  
AND, OR, NOT.  

¿Qué función devuelve el valor máximo de un campo?  
MAX().  

¿Qué función cuenta el número de filas?  
COUNT().  

¿Qué función calcula el promedio?  
AVG().  

¿Qué hace el predicado BETWEEN?  
Verifica si un valor está entre dos límites.  

¿Qué hace el predicado LIKE?  
Compara cadenas con comodines.  

¿Qué hace el predicado EXISTS?  
Verifica si una subconsulta devuelve resultados.  

¿Qué carácter se usa para reemplazar un solo carácter?  
? o _.  

¿Qué carácter se usa para reemplazar varios caracteres?  
* o %.  

¿Qué carácter representa un dígito cualquiera?  
#.  

¿Qué significan los símbolos <>, [], {}, y | en la sintaxis SQL?  
<>: parámetros a sustituir, []: opcional, {}: repetible, |: separador de opciones.  

¿Qué comando se usa para crear una tabla?  
CREATE TABLE.  

¿Qué comando se usa para crear una vista?  
CREATE VIEW nombre_vista AS consulta.  

¿Qué comando se usa para crear un índice?  
CREATE INDEX nombreindice ON tabla(columna).  

¿Qué comando se usa para modificar una tabla?  
ALTER TABLE.  

¿Qué comando se usa para eliminar una tabla?  
DROP TABLE.  

¿Qué es una restricción de dominio?  
Conjunto de valores y operaciones permitidas para un campo.  

¿Qué tipo de datos permite la cláusula NUMBER(p,s)?  
Valores numéricos con precisión p y escala s.  

¿Qué cláusula se usa para evitar valores nulos?  
NOT NULL.  

¿Qué cláusula garantiza la existencia de claves foráneas?  
FOREIGN KEY y REFERENCES.  

¿Qué cláusula garantiza unicidad y obligatoriedad de una clave primaria?  
PRIMARY KEY.  

¿Qué cláusula se usa para claves alternativas?  
UNIQUE (y opcionalmente NOT NULL).  

¿Qué cláusula se usa para condiciones de chequeo?  
CHECK (condición).  

¿Qué ciudades son válidas en el campo ciudad de la tabla DEPARTAMENTO?  
Medellín, Bogotá, Cali.  

¿Qué restricciones se aplican al campo salario en la tabla EMPLEADO?  
CHECK (salario > 0).  

¿Qué significa que una clave primaria sea compuesta?  
Que se forma con más de un campo (ej. PRIMARY KEY(snro, pnro)).  

¿Cómo se define una clave foránea hacia una clave primaria compuesta?  
FOREIGN KEY(cf_snro, cf_pnro) REFERENCES envio(snro, pnro).  

--2do--¿Para qué sirve la sentencia INSERT en SQL?  
Para agregar registros a una tabla.  

¿Cuál es la sintaxis básica de la sentencia INSERT?  
INSERT [INTO] <NombreTabla> [(campos)] VALUES (valores);  

¿Es obligatorio especificar los campos en la sentencia INSERT?  
No, pero si no se especifican, se deben proporcionar valores para todos los campos en orden.  

¿Qué ocurre si no se especifica un campo en la sentencia INSERT?  
Ese campo tomará el valor por defecto o NULL si no tiene restricción NOT NULL.  

¿Para qué sirve la sentencia UPDATE en SQL?  
Para modificar registros existentes en una tabla.  

¿Cuál es la sintaxis básica de la sentencia UPDATE?  
UPDATE <NombreTabla> SET campo = nuevo_valor [WHERE condición];  

¿Es obligatorio usar la cláusula WHERE en una sentencia UPDATE?  
No, pero si no se usa, se actualizarán todas las filas de la tabla.  

¿Se pueden actualizar varios campos en una sola sentencia UPDATE?  
Sí, separándolos por comas.  

¿Se pueden usar subconsultas en una sentencia UPDATE?  
Sí, tanto en la cláusula SET como en la cláusula WHERE.  

¿Qué hace la siguiente sentencia: UPDATE Curso SET horas = 0?  
Actualiza el valor del campo horas a 0 en todas las filas de la tabla Curso.  

¿Qué hace la siguiente sentencia: UPDATE Curso SET nombre = 'Calculo', horas = 5 WHERE CursoID = 'C03'?  
Modifica el nombre y las horas del curso con ID C03 a 'Calculo' y 5 respectivamente.  

¿Para qué sirve la sentencia DELETE en SQL?  
Para eliminar una o más filas de una tabla.  

¿Cuál es la sintaxis básica de la sentencia DELETE?  
DELETE FROM <NombreTabla> [WHERE condición];  

¿Qué ocurre si no se especifica la cláusula WHERE en una sentencia DELETE?  
Se eliminarán todas las filas de la tabla.  

¿Qué hace la siguiente sentencia: DELETE FROM Curso WHERE horas = 2?  
Elimina todas las filas de la tabla Curso donde el valor de horas sea igual a 2.  

¿Para qué sirve la sentencia DROP en SQL?  
Para eliminar completamente una tabla y todos sus datos de la base de datos.  

¿Cuál es la sintaxis básica de la sentencia DROP?  
DROP TABLE [schema.] tabla [CASCADE CONSTRAINTS] [PURGE];  

¿Qué hace la sentencia DROP TABLE curso PURGE?  
Elimina la tabla curso de forma permanente, sin pasar por la papelera de reciclaje.  

--3ro-¿Qué es la normalización en bases de datos?  
Es el proceso de transformar datos complejos en estructuras más simples, estables y fáciles de mantener.  

¿Por qué se adoptó la normalización?  
Porque almacenar todos los datos en un solo lugar era ineficiente y generaba errores de lógica.  

¿Cuáles son los objetivos de la normalización?  
Evitar redundancia, problemas de actualización y proteger la integridad de los datos.  

¿Qué condiciones debe cumplir una tabla para ser considerada una relación?  
Columnas con nombres únicos, sin filas duplicadas, y datos homogéneos por columna.  

¿Cuáles son los tres niveles básicos de normalización?  
Primera Forma Normal (1FN), Segunda Forma Normal (2FN), Tercera Forma Normal (3FN).  

¿Qué implica la Primera Forma Normal (1FN)?  
Eliminar grupos repetidos y asegurar que cada celda contenga valores atómicos.  

¿Qué implica la Segunda Forma Normal (2FN)?  
Eliminar dependencias parciales; los atributos no clave deben depender completamente de la clave primaria.  

¿Qué implica la Tercera Forma Normal (3FN)?  
Eliminar dependencias transitivas; los atributos no clave no deben depender de otros atributos no clave.  

¿Qué problemas presenta una base de datos no normalizada?  
Redundancia, errores de actualización, falta de integridad y pérdida de datos por inserción o borrado.  

¿Qué significa que los valores sean atómicos en 1FN?  
Que cada celda contiene un solo valor, sin listas ni arreglos.  

¿Qué se debe evitar en 1FN respecto a las filas y columnas?  
Evitar columnas repetidas y filas duplicadas.  

¿Qué es una dependencia parcial en 2FN?  
Cuando un atributo no clave depende solo de parte de la clave primaria.  

¿Qué se debe hacer si hay dependencia parcial?  
Separar los datos en tablas distintas para cumplir con 2FN.  

¿Qué es una dependencia transitiva en 3FN?  
Cuando un atributo no clave depende de otro atributo no clave.  

¿Cómo se elimina una dependencia transitiva?  
Separando los atributos en tablas distintas donde cada uno dependa directamente de la clave primaria.  

¿Qué ventajas ofrece la normalización?  
Integridad de datos, consultas optimizadas, índices más rápidos, mejor rendimiento de UPDATE y mejor concurrencia.  

¿Qué es un log de transacciones?  
Es una tabla donde se registran todos los cambios realizados a los datos.  

¿Qué comandos delimitan una transacción?  
BEGIN TRANSACTION y COMMIT TRANSACTION.  

¿Qué es un procedimiento almacenado?  
Es un bloque de código compilado en el servidor que puede aceptar parámetros y ejecutarse con eficiencia.  

¿Dónde se ejecuta un procedimiento almacenado?  
En el servidor de base de datos.  

¿Cuál es la sintaxis básica de un procedimiento almacenado?  
CREATE [OR REPLACE] PROCEDURE <nombre> [(parámetros)] IS BEGIN ... END;  
